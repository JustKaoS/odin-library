html {
  background-color: rgb(49, 44, 40);
}

.body {
  color: rgb(231, 220, 203);

}

.header {
  display: flex;
  margin-top: 20px;

}

#myBtn {
  border-radius: 8px;
  position: absolute;
  width: 100px;
  height: 40px;
  margin-left: -50px;
  left: 50%;
  background-color: #36413e;
  color: rgb(231, 220, 203);
}

#myBtn:hover {
  cursor: pointer;
}



.container {
  display: flex;
  margin-top: 50px;
  max-width: 1200px;
  justify-content: flex-start;

}

.card {
  background-color: #36413e;
  color: rgb(231, 220, 203);
  border: solid rgb(32, 22, 12) 2px;
  display: flex;
  flex-flow: column;
  justify-content: space-between;
  width: 175px;
  min-width: 160px;
  margin: 20px;
  border-radius: 10px;
}

.card-header {
  display: flex;
  flex-flow: row;
  width: 100%;
  justify-content: space-between;
  max-height: 30%;
}

.titleDiv {
  display: flex;
  flex-direction: column;
  align-content: center;
}

.card-header h4 {
  text-align: center;
  padding-top: 0;
  margin-top: 0;
  padding-bottom: 5px;

}

.card-header h3 {
  max-width: 103px;
  text-align: center;
  padding: 0;
  margin-top: 8px;
  margin-bottom: 0;
}

.delete {
  font-size: xx-large;
  font-weight: bolder;
  margin-right: 10px;
  color: rgb(145, 57, 57);
}

.delete:hover {
  cursor: pointer;
}

.card-footer {
  width: 100%;
  display: flex;
  align-items: end;
  justify-content: space-between;
  flex-flow: row;
  margin-bottom: 8px;
}

.pages {
  margin: 0;
  padding: 0;
  margin-left: 10px;

}


.hasRead  {
  margin: 0;
  padding: 0;
  margin-right: 10px;
  font-size: larger;
  font-weight: bolder;
}

.hasRead:hover {
  cursor: pointer;
}

#blank {
  visibility: hidden;
}








/********** MODAL STYLES **********/
/* The Modal (background) */
.modal {

  color: rgb(231, 220, 203);
  border:2px solid rgba(203, 221, 231, 0.308);
  border-radius: 10px;
  padding: 10px;
  position: absolute;
  left: 50%;
  top: 15%;
  margin-left: -90px;
  margin-top: -125px;
  z-index: 1;
  width: 180px;
  height: auto;
  overflow: auto;
  background-color: #36413e;
}

.modal h3 {
  margin-top: 10px;
}
.modalBackdrop {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(24, 21, 19, 0.9);
}

/* Modal Content/Box */

.form {
  background-color: #353535;
  color: rgb(203, 221, 231);
  padding: 3px;
  margin: 2px;
  border: 1px solid #888;
  width: auto;
}

.modal-footer {
  display: flex;
  justify-content: space-between;
  margin: 15px 0px;
}



.readBox {
  display: flex;
  margin: 0;
  padding: 0;
}

.readBox p {
  margin: 0;
  padding: 0;
}

#submitBtn {
  height: 20px;
}

/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden,
[hidden] {
  display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.visually-hidden {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  /* 1 */
}

/*
 * Extends the .visually-hidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visually-hidden.focusable:active,
.visually-hidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: inherit;
  width: auto;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
  visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * The use of `table` rather than `block` is only necessary if using
 * `::before` to contain the top-margins of child elements.
 */

.clearfix::before,
.clearfix::after {
  content: "";
  display: table;
}

.clearfix::after {
  clear: both;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */